# coding: utf-8

"""
    Luno API

    The Luno API provides developers with a wealth of financial information provided through the Luno platform.  Through this secure system developers can:  <ul>    <li>Create accounts for trading in cryptocurrencies</li>    <li>Access current and historic cryptocurrency market data</li>    <li>Submit trade orders and view order status</li>    <li>Buy and sell Bitcoin and Ethereum</li>    <li>Send and receive Bitcoin and Ethereum</li>    <li>Generate Bitcoin and Ethereum wallet addresses</li>  </ul>   The Luno API brings the world of Bitcoin and Ethereum to your doorstep. 

    The version of the OpenAPI document: 1.2.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from luno_openapi.api.accounts_api import AccountsApi


class TestAccountsApi(unittest.TestCase):
    """AccountsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AccountsApi()

    def tearDown(self) -> None:
        pass

    def test_create_account(self) -> None:
        """Test case for create_account

        Create account
        """
        pass

    def test_get_balances(self) -> None:
        """Test case for get_balances

        List account balances
        """
        pass

    def test_get_move(self) -> None:
        """Test case for get_move

        Move
        """
        pass

    def test_list_moves(self) -> None:
        """Test case for list_moves

        List Moves
        """
        pass

    def test_list_pending_transactions(self) -> None:
        """Test case for list_pending_transactions

        List pending transactions
        """
        pass

    def test_list_transactions(self) -> None:
        """Test case for list_transactions

        List transactions
        """
        pass

    def test_move(self) -> None:
        """Test case for move

        Move
        """
        pass

    def test_update_account_name(self) -> None:
        """Test case for update_account_name

        Update Account Name
        """
        pass


if __name__ == "__main__":
    unittest.main()
